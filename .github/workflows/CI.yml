name: 'Continuous Integration'
on:
  push:
    branches: [ master , ]
  workflow_dispatch:

# permissions:
  # contents: read

jobs:
  'trunk':
    name: 'Lint with Trunk.io'
    runs-on: ubuntu-latest
    # permissions:
      # checks: write # For trunk to post annotations
      # contents: read # For repo checkout
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Trunk Check
        uses: trunk-io/trunk-action@main
        with:
          debug: true
      - if: failure()
        run: |
          set -euo pipefail
          set -vx
          
          tmpdir="$(mktemp -d)"
          echo "TRUNK_TMPDIR=${tmpdir}" >>"${GITHUB_ENV}"
          
          trunk_path="${INPUT_TRUNK_PATH}"
          if [[ -z ${trunk_path} ]]; then
            if [[ -f .trunk/bin/trunk && -x .trunk/bin/trunk ]]; then
              trunk_path=.trunk/bin/trunk
            elif [[ -f tools/trunk && -x tools/trunk ]]; then
              trunk_path=tools/trunk
            elif [[ -f trunk && -x trunk ]]; then
              trunk_path=./trunk
            else
              curl -fsSL https://trunk.io/releases/trunk -o "${tmpdir}/trunk"
              ls -la "${tmpdir}"
              ls -la "${tmpdir}/trunk"
              chmod u+x "${tmpdir}/trunk"
              ls -la "${tmpdir}/trunk"
              trunk_path="${tmpdir}/trunk"
            fi
          fi
          ls -la "${tmpdir}/trunk"
          ls -la "${trunk_path}"
          echo "TRUNK_PATH=${trunk_path}" >>"${GITHUB_ENV}"
          # Ensure that trunk CLI is downloaded before subsequent steps
          ls -la "${tmpdir}/trunk"
          ls -la "${trunk_path}"
          ${trunk_path} version || echo "::warning::${trunk_path} does not exist!"
          bash -vx ${trunk_path} version || echo "::warning::${trunk_path} does not exist!"
          ls -la "${tmpdir}/trunk"
          ls -la "${trunk_path}"
        
